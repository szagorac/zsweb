var zsNoise=function(e){"use strict";function n(e){this.message=e,this.name="ZsNoiseException"}function t(){N("resetConfig: NOISE"),I.masterGainVal=0}function i(t,i){if(!e)throw new n("Invalid libraries. Required: zsUtil");if(N("Init Noise"),h&&s(),!t)return F("_initNoise: invalid context"),void v(!1);q=t,G(i)&&(i=q.destination),v(!0)}function a(){return h&&!G(O)?O:(l(),O=r(),G(Q)?O.connect(A):O.connect(Q),O)}function r(){var e=q.createBufferSource();const n=2*q.sampleRate,t=q.createBuffer(1,n,q.sampleRate),i=t.getChannelData(0);for(let e=0;e<n;e++)i[e]=2*Math.random()-1;return e.buffer=t,e}function l(){x&&q?(s(),A=y(),A.gain.value=0,S=q.createOscillator(),S.frequency.value=I.detuneFreq,b=q.createGain(),b.gain.value=I.detuneMax,S.connect(b),S.start(),I.isUseFilter&&(I.filterMaxValue=q.sampleRate/2,I.filterNumberOfOctaves=Math.log(I.filterMaxValue/I.filterMinValue)/Math.LN2,Q=q.createBiquadFilter(),Q.type=I.filterType,Q.frequency.value=I.filterFreq,Q.Q.value=I.filterQ,b.connect(Q.detune),Q.connect(A)),A.connect(q.destination)):F("_buildCommonNodes: invalid context")}function u(e){x&&!G(Q)&&(I.filterFreq=e,Q.frequency.linearRampToValueAtTime(e,M()+I.rampSec))}function o(e){x&&!G(Q)&&(I.filterQ=e,Q.Q.linearRampToValueAtTime(e,M()+I.rampSec))}function f(e){x&&!G(Q)&&Q.detune.setValueAtTime(e,M())}function c(e){x&&!G(Q)&&(I.filterType=e,Q.type=e)}function s(){if(h){G(A)||A.gain.linearRampToValueAtTime(.001,M()+.1);var e=[O,S,b,Q,A];setTimeout(function(){m(e)},200),O=null,S=null,b=null,Q=null,A=null,h=!1}}function m(n){if(e.isArray(n))for(var t=0;t<n.length;t++)d(n[t])}function d(e){G(e)||("function"==typeof e.stop&&e.stop(),"function"==typeof e.disconnect&&e.disconnect())}function p(e){if(x){G(e)&&(e=I.masterGainVal);var n=a();if(!G(n)){var t=M();h||A.gain.setValueAtTime(0,t),V(e,I.fadeInMs),h||(n.loop=!0,n.start()),h=!0}}}function v(e){G(e)||(N("setReady: "+e),x=e)}function T(){return x}function g(){return h}function V(n,t){if(q&&A){e.isString(n)&&(n=e.toFloat(n));var i=I.masterGainVal;if(e.isNumeric(n)){i=n,i<0?i=0:i>1&&(i=1);var a=I.masterGainVal,r=A.gain.value;if(a!==i&&(I.masterGainVal=i),r!==i)if(!G(t)&&e.isNumeric(t)){var l=e.msecToSec(t),u=M(),o=i/4,f=u+l/2,c=i,s=u+l;0===i?(o=0,c=0):o=i<r?r-o:r+o,A.gain.linearRampToValueAtTime(o,f),A.gain.linearRampToValueAtTime(c,s)}else A.gain.setValueAtTime(i,M())}else F("_setMasterGain: Invalid gain level: "+n)}else F("setMasterGain: invalid context of master gain")}function M(){return G(q)?0:q.currentTime}function y(){return q?q.createGain():(F("_createGainNode: Audio context is not initialised!!"),null)}function F(n){e.logError(n,R)}function N(n){e.log(n,R)}function G(n){return e.isNull(n)}const R="ZsNoise: ";var q=null,x=!1,A=null,h=!1,O=null,Q=null,S=null,b=null,I={masterGainVal:0,isUseFilter:!0,filterQMultiplier:30,filterMinValue:100,filterMaxValue:1e3,filterNumberOfOctaves:1,filterFreq:1e3,filterType:"bandpass",filterQ:100,fadeInMs:500,fadeOutMs:500,rampSec:2,detuneFreq:.05,detuneMax:50};return{init:function(e,n){i(e,n)},reset:function(){t()},setGain:function(e,n){V(e,n)},isReady:function(){return T()},isRunning:function(){return g()},play:function(e){return p(e)},stop:function(e){return s(e)},setFilterFreq:function(e){u(e)},setFilterQ:function(e){o(e)},setFilterDetune:function(e){f(e)},setFilterType:function(e){c(e)}}}(zsUtil);