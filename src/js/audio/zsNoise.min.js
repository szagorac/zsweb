var zsNoise=function(e){"use strict";function n(e){this.message=e,this.name="ZsNoiseException"}function t(){N("resetConfig: NOISE"),b.masterGainVal=0}function i(t,i){if(!e)throw new n("Invalid libraries. Required: zsUtil");if(N("Init Noise"),x&&f(),!t)return M("_initNoise: invalid context"),void p(!1);G=t,y(i)&&(i=G.destination),p(!0)}function a(){return x&&!y(A)?A:(l(),A=r(),y(h)?A.connect(q):A.connect(h),A)}function r(){var e=G.createBufferSource();const n=2*G.sampleRate,t=G.createBuffer(1,n,G.sampleRate),i=t.getChannelData(0);for(let e=0;e<n;e++)i[e]=2*Math.random()-1;return e.buffer=t,e}function l(){R&&G?(f(),q=T(),q.gain.value=0,O=G.createOscillator(),O.frequency.value=b.detuneFreq,S=G.createGain(),S.gain.value=b.detuneMax,O.connect(S),O.start(),b.isUseFilter&&(b.filterMaxValue=G.sampleRate/2,b.filterNumberOfOctaves=Math.log(b.filterMaxValue/b.filterMinValue)/Math.LN2,h=G.createBiquadFilter(),h.type=b.filterType,h.frequency.value=b.filterFreq,h.Q.value=b.filterQ,S.connect(h.detune),h.connect(q)),q.connect(G.destination)):M("_buildCommonNodes: invalid context")}function u(e){R&&!y(h)&&h.frequency.linearRampToValueAtTime(e,g()+b.rampSec)}function o(e){R&&!y(h)&&h.Q.linearRampToValueAtTime(e,g()+b.rampSec)}function c(e){R&&!y(h)&&h.detune.setValueAtTime(e,g())}function s(e){R&&!y(h)&&(h.type=e)}function f(){x&&(y(q)||q.gain.setValueAtTime(0,g()),m(A),A=null,m(O),O=null,m(S),S=null,m(h),h=null,m(q),q=null,x=!1)}function m(e){y(e)||("function"==typeof e.stop&&e.stop(),"function"==typeof e.disconnect&&e.disconnect())}function d(e){if(R){y(e)&&(e=b.masterGainVal);var n=a();if(!y(n)){var t=g();x||q.gain.setValueAtTime(0,t),V(e,b.fadeInMs),x||(n.loop=!0,n.start()),x=!0}}}function p(e){y(e)||(N("setReady: "+e),R=e)}function v(){return R}function V(n,t){if(G&&q){e.isString(n)&&(n=e.toFloat(n));var i=b.masterGainVal;if(e.isNumeric(n)){i=n,i<0?i=0:i>1&&(i=1);var a=b.masterGainVal,r=q.gain.value;if(a!==i&&(b.masterGainVal=i),r!==i)if(!y(t)&&e.isNumeric(t)){var l=e.msecToSec(t),u=g(),o=i/4,c=u+l/2,s=i,f=u+l;0===i?(o=0,s=0):o=i<r?r-o:r+o,q.gain.linearRampToValueAtTime(o,c),q.gain.linearRampToValueAtTime(s,f)}else q.gain.setValueAtTime(i,g())}else M("_setMasterGain: Invalid gain level: "+n)}else M("setMasterGain: invalid context of master gain")}function g(){return y(G)?0:G.currentTime}function T(){return G?G.createGain():(M("_createGainNode: Audio context is not initialised!!"),null)}function M(n){e.logError(n,F)}function N(n){e.log(n,F)}function y(n){return e.isNull(n)}const F="ZsNoise: ";var G=null,R=!1,q=null,x=!1,A=null,h=null,O=null,S=null,b={masterGainVal:0,isUseFilter:!0,filterQMultiplier:30,filterMinValue:100,filterMaxValue:1e3,filterNumberOfOctaves:1,filterFreq:1e3,filterType:"bandpass",filterQ:100,fadeInMs:500,fadeOutMs:500,rampSec:2,detuneFreq:.05,detuneMax:50};return{init:function(e,n){i(e,n)},reset:function(){t()},setGain:function(e,n){V(e,n)},isReady:function(){return v()},isRunning:function(){return x},play:function(e){return d(e)},stop:function(e){return f(e)},setFilterFreq:function(e){u(e)},setFilterQ:function(e){o(e)},setFilterDetune:function(e){c(e)},setFilterType:function(e){s(e)}}}(zsUtil);